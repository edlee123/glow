{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Concept Configuration",
  "description": "Schema for concept configurations in the Glow creative automation pipeline",
  "type": "object",
  "required": [
    "generation_id",
    "timestamp",
    "input_brief",
    "product",
    "aspect_ratio",
    "concept",
    "llm_processing",
    "image_generation"
  ],
  "properties": {
    "generation_id": {
      "type": "string",
      "description": "Unique identifier for the generation"
    },
    "timestamp": {
      "type": "string",
      "description": "Timestamp of generation in ISO 8601 format",
      "format": "date-time"
    },
    "input_brief": {
      "type": "string",
      "description": "Reference to the input campaign brief"
    },
    "product": {
      "type": "string",
      "description": "Product name from the campaign brief"
    },
    "aspect_ratio": {
      "type": "string",
      "description": "Aspect ratio of the generated asset",
      "enum": ["1:1", "9:16", "16:9"]
    },
    "concept": {
      "type": "string",
      "description": "Concept identifier (e.g., 'concept1')"
    },
    "llm_processing": {
      "type": "object",
      "description": "Results from LLM processing of the campaign brief to generate creative direction and prompts",
      "required": [
        "model",
        "creative_direction",
        "image_prompt",
        "text_overlay_config"
      ],
      "properties": {
        "model": {
          "type": "string",
          "description": "LLM model used for processing"
        },
        "creative_direction": {
          "type": "string",
          "description": "High-level creative direction for the concept"
        },
        "image_prompt": {
          "type": "string",
          "description": "Detailed prompt for image generation"
        },
        "text_overlay_config": {
          "type": "object",
          "description": "Configuration for text overlay",
          "required": [
            "primary_text"
          ],
          "properties": {
            "primary_text": {
              "type": "string",
              "description": "Primary text to overlay on the image"
            },
            "secondary_text": {
              "type": "string",
              "description": "Secondary text to overlay (optional)"
            },
            "call_to_action": {
              "type": "string",
              "description": "Call to action text (optional)"
            },
            "text_position": {
              "type": "string",
              "description": "Position of the text on the image",
              "enum": ["top", "bottom", "center", "top_left", "top_right", "bottom_left", "bottom_right"],
              "default": "bottom"
            },
            "font": {
              "type": "string",
              "description": "Font for the text"
            },
            "color": {
              "type": "string",
              "description": "Text color (hex code)",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
            },
            "shadow": {
              "type": "boolean",
              "description": "Whether to apply a shadow to the text"
            },
            "shadow_color": {
              "type": "string",
              "description": "Shadow color (hex code with alpha)",
              "pattern": "^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{3})$"
            }
          }
        },
        "logo_overlay_config": {
          "type": "object",
          "description": "Configuration for logo overlay",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL or path to the logo image"
            },
            "position": {
              "type": "string",
              "description": "Position of the logo on the image",
              "enum": ["top_left", "top_right", "bottom_left", "bottom_right", "center"],
              "default": "bottom_right"
            },
            "size": {
              "type": "integer",
              "description": "Size of the logo as a percentage of the image width (1-100)",
              "minimum": 1,
              "maximum": 100,
              "default": 15
            },
            "padding": {
              "type": "integer",
              "description": "Padding from the edge of the image in pixels",
              "minimum": 0,
              "default": 20
            },
            "opacity": {
              "type": "integer",
              "description": "Opacity of the logo (0-100)",
              "minimum": 0,
              "maximum": 100,
              "default": 100
            }
          }
        }
      }
    },
    "image_generation": {
      "type": "object",
      "description": "Configuration for image generation service (DALL-E, Firefly, etc.)",
      "required": [
        "provider",
        "api_endpoint",
        "env_vars"
      ],
      "properties": {
        "provider": {
          "type": "string",
          "description": "Provider for image generation",
          "enum": ["openrouter_dalle", "openai_dalle", "adobe_firefly"],
          "default": "openrouter_dalle"
        },
        "api_endpoint": {
          "type": "string",
          "description": "API endpoint for image generation"
        },
        "env_vars": {
          "type": "array",
          "description": "Environment variables for API authentication",
          "items": {
            "type": "string"
          }
        },
        "model": {
          "type": "string",
          "description": "Model to use for image generation"
        },
        "parameters": {
          "type": "object",
          "description": "Additional parameters for image generation",
          "properties": {
            "negative_prompt": {
              "type": "string",
              "description": "Negative prompt to guide image generation"
            },
            "seed": {
              "type": "integer",
              "description": "Seed for reproducible generation"
            },
            "style_strength": {
              "type": "integer",
              "description": "Strength of the style to apply",
              "minimum": 0,
              "maximum": 100
            },
            "reference_image": {
              "type": ["string", "null"],
              "description": "Path to reference image (optional, deprecated)"
            },
            "product_reference_images": {
              "type": "array",
              "description": "Paths to product reference images",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "localization": {
      "type": "object",
      "description": "Configuration for text localization (optional)",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether localization is enabled"
        },
        "target_language": {
          "type": "string",
          "description": "Target language for localization"
        },
        "api_endpoint": {
          "type": "string",
          "description": "API endpoint for translation"
        },
        "env_vars": {
          "type": "array",
          "description": "Environment variables for API authentication",
          "items": {
            "type": "string"
          }
        },
        "translated_text": {
          "type": "object",
          "description": "Translated text content",
          "properties": {
            "primary_text": {
              "type": "string",
              "description": "Translated primary text"
            },
            "secondary_text": {
              "type": "string",
              "description": "Translated secondary text"
            },
            "call_to_action": {
              "type": "string",
              "description": "Translated call to action"
            }
          }
        }
      }
    },
    "image_processing": {
      "type": "object",
      "description": "Configuration for image processing (using Pillow initially, Photoshop API in future)",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Provider for image processing",
          "enum": ["pillow", "photoshop_api"],
          "default": "pillow"
        },
        "env_vars": {
          "type": "array",
          "description": "Environment variables for API authentication",
          "items": {
            "type": "string"
          }
        },
        "text_layer_id": {
          "type": "string",
          "description": "ID for the text layer (for Photoshop API)"
        },
        "adjustments": {
          "type": "array",
          "description": "Image adjustments to apply",
          "items": {
            "type": "object",
            "required": ["type", "value"],
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of adjustment",
                "enum": ["brightness", "contrast", "saturation", "sharpness", "blur"]
              },
              "value": {
                "type": "number",
                "description": "Adjustment value"
              }
            }
          }
        }
      }
    }
  }
}